    map<pair<int,int>,int> m;
    int mod = 1e9+7;
    int f(int sp, int ep, int k) {
        if(k == 0 && sp != ep) return 0;
        
        if(k == 0 && sp == ep) return 1;
        
        if(abs(sp-ep) > k) return 0;
        
        if(m.count({sp, k}) > 0) return m[{sp, k}];
        
        int a, b;
        if(m.count({sp-1, k-1}) > 0){
            a = m[{sp-1, k-1}];
        }
        else{
            a = f(sp-1, ep, k-1);
        }
        
        if(m.count({sp+1, k-1}) > 0){
            b = m[{sp+1, k-1}];
        }
        else{
            b = f(sp+1, ep, k-1);
        }
        
        return m[{sp, k}] = (a + b)%mod;
    }
    
    int numberOfWays(int sp, int ep, int k){
        if(abs(ep-sp) > k) return 0;
        int res = f(sp, ep, k);
        
        return res;
    }

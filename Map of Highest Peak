#define vv vector<vector<int>>
#define v vector<int>

class Solution {
public:
    vector<vector<int>> highestPeak(vector<vector<int>>& isWater) {
        
        int m=isWater.size(),n=isWater[0].size();
        vv ans(m,v(n)),vis(m,v(n));
        
        queue<pair<int,int>>q;
        
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(isWater[i][j]){
                    ans[i][j]=0;
                    q.push({i,j});
                    vis[i][j]=1;
                }
            }
        }
        
        v row={-1,1,0,0};
        v col={0,0,-1,1};
        
        while(!q.empty()){
            auto ele=q.front();
            q.pop();
            int i=ele.first,j=ele.second;
            
            for(int k=0;k<4;k++){
                int r=row[k]+i,c=col[k]+j;
                if(r>=0 && c>=0 && r<m && c<n && !vis[r][c] && isWater[r][c]==0){
                    ans[r][c]=1+ans[r-row[k]][c-col[k]];
                    q.push({r,c});
                    vis[r][c]=1;
                }
            }
        }
        
        return ans;
    }
};
